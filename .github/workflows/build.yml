name: Test bookkeper

on: [workflow_dispatch, push]

jobs:
  build:
    name: Build and test bookkeeper
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:11.8
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15488:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js 16.14.0
        uses: actions/setup-node@v1
        with:
          node-version: 16.14.0

      - name: Install deps
        run: yarn

      - name: Setup CI env
        run: cp .env.ci .env

      - name: Setup database
        run: |
          yarn migrate
          yarn seed

      - name: Lint
        run: yarn lint

      - name: Build server
        run: yarn build-server
      
      - name: Build client
        run: yarn build-client

      - name: Start server
        run: ./script/start-server.sh

      - name: Run tests
        id: run-tests
        continue-on-error: true
        run: yarn test

      - name: Tests failed, dump server logs (See previous step for test logs)
        if: steps.run-tests.outcome != 'success'
        run: |
          echo "Tests failed, dumping server logs"
          cat log/server.log

      - name: Re-run tests in verbose mode
        if: steps.run-tests.outcome != 'success'
        run: |
          DEBUG=* yarn test --silent=false
          exit 1

      - name: Stop server
        run: ./script/stop-server.sh
    